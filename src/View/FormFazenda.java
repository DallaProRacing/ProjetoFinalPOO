package View;
import Controller.ADDFazendaController;
import Model.Fazenda;

import java.awt.List;
import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.time.Instant;
import java.time.LocalDate;
import java.time.format.DateTimeParseException;
import java.util.Date;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

public class FormFazenda extends javax.swing.JFrame {

    private Date validade;

    
    public FormFazenda() {
        initComponents();
        setSize(750, 417); 
        setLocationRelativeTo(null);
        carregarDadosNaTabela();
       
        tabelaFazenda.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent event) {
                if (!event.getValueIsAdjusting() && tabelaFazenda.getSelectedRow() != -1) {
                    int selectedRow = tabelaFazenda.getSelectedRow();
                    
                    // Recuperar dados da linha selecionada
                    String nomeFazenda = tabelaFazenda.getValueAt(selectedRow, 1).toString();
                    String nomeProdutor = tabelaFazenda.getValueAt(selectedRow, 2).toString();
                    String cpf = tabelaFazenda.getValueAt(selectedRow, 3).toString();
                    String endereco = tabelaFazenda.getValueAt(selectedRow, 4).toString();
                    
                    // Definir os dados recuperados nos campos de texto
                    txtNomeFazenda.setText(nomeFazenda);
                    txtNomeProdutor.setText(nomeProdutor);
                    txtCPF.setText(cpf);
                    txtEndereco.setText(endereco);
                    
                    
                }
            }
        });
    
    }
   
        // Método para carregar dados do banco de dados na JTable
    private void carregarDadosNaTabela() {
        ADDFazendaController controller = new ADDFazendaController();
        
        var fazendas = controller.pesquisarFazendas("NomeFazenda", ""); // Busca todos os registros

        // Obter o modelo da tabela
        DefaultTableModel modelo = (DefaultTableModel) tabelaFazenda.getModel();
        
        // Limpar os dados atuais da tabela
        modelo.setRowCount(0);

        // Adicionar os dados do banco de dados ao modelo da tabela
        for (Fazenda fazenda : fazendas) {
            Object[] linha = {
                fazenda.getIdFazenda(),
                fazenda.getNomeFazenda(),
                fazenda.getNomeProdutor(),
                fazenda.getCpf(),
                fazenda.getEndereco()
            };
            modelo.addRow(linha);
        }
    
    
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label1 = new java.awt.Label();
        jPanel1 = new javax.swing.JPanel();
        panelFazenda = new java.awt.Panel();
        btnSalvarF = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtNomeFazenda = new javax.swing.JTextField();
        txtNomeProdutor = new javax.swing.JTextField();
        txtCPF = new javax.swing.JTextField();
        txtEndereco = new javax.swing.JTextField();
        btnLimparFaz = new javax.swing.JButton();
        PanelTabelaFazenda = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaFazenda = new javax.swing.JTable();
        btnAlterarF = new javax.swing.JButton();
        btnExcluirF = new javax.swing.JButton();

        label1.setText("label1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setIconImages(null);
        setMinimumSize(new java.awt.Dimension(800, 600));

        panelFazenda.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        btnSalvarF.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnSalvarF.setText("Salvar");
        btnSalvarF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarFActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel1.setText("Nome da Fazenda");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel2.setText("Nome do Produtor");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel3.setText("Endereço");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel4.setText("CPF");

        txtNomeFazenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeFazendaActionPerformed(evt);
            }
        });

        txtNomeProdutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeProdutorActionPerformed(evt);
            }
        });

        txtCPF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCPFActionPerformed(evt);
            }
        });

        txtEndereco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEnderecoActionPerformed(evt);
            }
        });

        btnLimparFaz.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnLimparFaz.setText("Limpar");
        btnLimparFaz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparFazActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelFazendaLayout = new javax.swing.GroupLayout(panelFazenda);
        panelFazenda.setLayout(panelFazendaLayout);
        panelFazendaLayout.setHorizontalGroup(
            panelFazendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelFazendaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelFazendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNomeFazenda, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelFazendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelFazendaLayout.createSequentialGroup()
                        .addGroup(panelFazendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(panelFazendaLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnLimparFaz)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSalvarF))
                    .addComponent(txtNomeProdutor, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap())
        );
        panelFazendaLayout.setVerticalGroup(
            panelFazendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFazendaLayout.createSequentialGroup()
                .addGroup(panelFazendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelFazendaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panelFazendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNomeFazenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelFazendaLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtNomeProdutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addGap(4, 4, 4)
                        .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelFazendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLimparFaz)
                    .addComponent(btnSalvarF))
                .addContainerGap())
        );

        tabelaFazenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Nome da Fazenda", "Nome Produtor", "CPF", "Endereço"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Double.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabelaFazenda);

        btnAlterarF.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnAlterarF.setText("Alterar");
        btnAlterarF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarFActionPerformed(evt);
            }
        });

        btnExcluirF.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnExcluirF.setText("Excluir");
        btnExcluirF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelTabelaFazendaLayout = new javax.swing.GroupLayout(PanelTabelaFazenda);
        PanelTabelaFazenda.setLayout(PanelTabelaFazendaLayout);
        PanelTabelaFazendaLayout.setHorizontalGroup(
            PanelTabelaFazendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelTabelaFazendaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAlterarF)
                .addGap(18, 18, 18)
                .addComponent(btnExcluirF)
                .addContainerGap())
            .addGroup(PanelTabelaFazendaLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 690, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        PanelTabelaFazendaLayout.setVerticalGroup(
            PanelTabelaFazendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelTabelaFazendaLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelTabelaFazendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAlterarF)
                    .addComponent(btnExcluirF))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(69, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(PanelTabelaFazenda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelFazenda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(69, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelFazenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addComponent(PanelTabelaFazenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
   
    private void btnExcluirFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnExcluirFActionPerformed

    private void btnAlterarFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarFActionPerformed
        
    // Verificar se uma linha foi selecionada na tabela
    int selectedRow = tabelaFazenda.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Selecione uma fazenda na tabela para alterar.");
        return;
    }

    // Obter os valores da linha selecionada
    String nomeFazenda = (String) tabelaFazenda.getValueAt(selectedRow, 1); // Coluna 1 é o nome da fazenda

    // Obter os novos valores dos campos de entrada
    String novoNomeProdutor = txtNomeProdutor.getText();
    String novoCpf = txtCPF.getText();
    String novoEndereco = txtEndereco.getText();

    // Criar um objeto Fazenda com os novos valores
    Fazenda fazenda = new Fazenda();
    fazenda.setNomeFazenda(nomeFazenda); // Presumindo que o nome da fazenda não muda
    fazenda.setNomeProdutor(novoNomeProdutor);
    fazenda.setCpf(novoCpf);
    fazenda.setEndereco(novoEndereco);

    // Chamar o método para alterar os dados no banco de dados
    ADDFazendaController controller = new ADDFazendaController();
    boolean alteracaoBemSucedida = controller.alterarFazenda(fazenda);

    if (alteracaoBemSucedida) {
        JOptionPane.showMessageDialog(this, "Fazenda alterada com sucesso!");
        carregarDadosNaTabela(); // Método para recarregar os dados na tabela após a alteração
    } else {
        JOptionPane.showMessageDialog(this, "Erro ao alterar a fazenda.");
    }
    }//GEN-LAST:event_btnAlterarFActionPerformed

    private void btnLimparFazActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparFazActionPerformed
           
    txtCPF.setText("");
    txtEndereco.setText("");
    txtNomeFazenda.setText("");
    txtNomeProdutor.setText("");       
        
    }//GEN-LAST:event_btnLimparFazActionPerformed

    private void txtEnderecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEnderecoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEnderecoActionPerformed

    private void txtCPFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCPFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCPFActionPerformed

    private void txtNomeProdutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeProdutorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeProdutorActionPerformed

    private void txtNomeFazendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeFazendaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeFazendaActionPerformed

    private void btnSalvarFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarFActionPerformed
        // Obter os dados dos campos de texto
        String nomeFazenda = txtNomeFazenda.getText();
        String nomeProdutor = txtNomeProdutor.getText();
        String cpf = txtCPF.getText();
        String endereco = txtEndereco.getText();

        // Verificar se todos os campos foram preenchidos
        if (nomeFazenda.isEmpty() || nomeProdutor.isEmpty() || cpf.isEmpty() || endereco.isEmpty()) {
            // Exibir mensagem de erro
            JOptionPane.showMessageDialog(this, "Por favor, preencha todos os campos.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Verificar se o CPF é válido
        if (!isValidCPF(cpf)) {
            // Exibir mensagem de erro
            JOptionPane.showMessageDialog(this, "CPF inválido.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Criar uma instância do modelo Fazenda com os dados obtidos
        Fazenda fazenda = new Fazenda();
        fazenda.setNomeFazenda(nomeFazenda);
        fazenda.setNomeProdutor(nomeProdutor);
        fazenda.setCpf(cpf);
        fazenda.setEndereco(endereco);

        // Chamar o método salvarFazenda do controlador
        ADDFazendaController controller = new ADDFazendaController();
        boolean sucesso = controller.salvarFazenda(fazenda);

        // Verificar se o salvamento foi bem-sucedido
        if (sucesso) {
            // Exibir mensagem de sucesso
            JOptionPane.showMessageDialog(this, "Dados salvos com sucesso!");

            // Exibir mensagem de erro
            JOptionPane.showMessageDialog(this, "Erro ao salvar os dados.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
        }

        // Método para validar CPF
        private boolean isValidCPF(String cpf) {
            // Verificar se o CPF possui 11 dígitos
            if (cpf.length() != 11) {
                return false;
            }

            // Verificar se todos os dígitos são iguais
            if (cpf.matches("(\\d)\\1{10}")) {
                return false;
            }

            // Cálculo do primeiro dígito verificador
            int soma = 0;
            for (int i = 0; i < 9; i++) {
                soma += Integer.parseInt(cpf.substring(i, i + 1)) * (10 - i);
            }
            int resto = 11 - (soma % 11);
            int digitoVerificador1 = resto == 10 || resto == 11 ? 0 : resto;

            // Verificar o primeiro dígito verificador
            if (digitoVerificador1 != Integer.parseInt(cpf.substring(9, 10))) {
                return false;
            }

            // Cálculo do segundo dígito verificador
            soma = 0;
            for (int i = 0; i < 10; i++) {
                soma += Integer.parseInt(cpf.substring(i, i + 1)) * (11 - i);
            }
            resto = 11 - (soma % 11);
            int digitoVerificador2 = resto == 10 || resto == 11 ? 0 : resto;

            // Verificar o segundo dígito verificador
            return digitoVerificador2 == Integer.parseInt(cpf.substring(10));

            // Método para verificar se já existe uma fazenda com o mesmo CPF
    }//GEN-LAST:event_btnSalvarFActionPerformed

    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormFazenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormFazenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormFazenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormFazenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
             new FormFazenda().setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelTabelaFazenda;
    private javax.swing.JButton btnAlterarF;
    private javax.swing.JButton btnExcluirF;
    private javax.swing.JButton btnLimparFaz;
    private javax.swing.JButton btnSalvarF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.Label label1;
    private java.awt.Panel panelFazenda;
    private javax.swing.JTable tabelaFazenda;
    private javax.swing.JTextField txtCPF;
    private javax.swing.JTextField txtEndereco;
    private javax.swing.JTextField txtNomeFazenda;
    private javax.swing.JTextField txtNomeProdutor;
    // End of variables declaration//GEN-END:variables

    private static class Connection {

        public Connection() {
        }
    }
}
